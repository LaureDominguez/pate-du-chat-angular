import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { BehaviorSubject, Observable, tap } from 'rxjs';

import { Category } from '../models/category';

@Injectable({
  providedIn: 'root',
})
export class CategoryService {
  private apiUrl = 'http://localhost:5000/api/categories';
  private categoriesSubject = new BehaviorSubject<Category[]>([]);
  categories$ = this.categoriesSubject.asObservable(); // Observable √©coutable

  constructor(private http: HttpClient) {
    this.loadCategories(); // Charger les cat√©gories au d√©marrage
  }

  // Charge les cat√©gories et met √† jour le BehaviorSubject
  private loadCategories(): void {
    this.http.get<Category[]>(this.apiUrl).subscribe((categories) => {
    // console.log('üì° Chargement des cat√©gories :', categories);
      this.categoriesSubject.next(categories); // Met √† jour les abonn√©s
    });
  }

  // R√©cup√©rer toutes les cat√©gories
  getCategories(): Observable<Category[]> {
  // console.log('liste des Cat√©gories charg√©es');
    // return this.http.get<Category[]>(this.apiUrl);
    return this.categories$;
  }

  // R√©cup√©rer une cat√©gorie par son ID
  getCategoryById(id: string): Observable<Category> {
    const url = `${this.apiUrl}/${id}`;
    return this.http.get<Category>(url);
  }

  // Cr√©er une nouvelle cat√©gorie
  createCategory(category: Category): Observable<Category> {
    // return this.http.post<Category>(this.apiUrl, category);
    return this.http.post<Category>(this.apiUrl, category).pipe(
      tap(() => this.loadCategories()) // Met √† jour apr√®s cr√©ation
    );
  }

  // Mettre √† jour une cat√©gorie existante
  updateCategory(category: Category): Observable<Category> {
    const url = `${this.apiUrl}/${category._id}`;
    // return this.http.put<Category>(url, category);
    return this.http.put<Category>(url, category).pipe(
      tap(() => this.loadCategories()) // Met √† jour apr√®s modification
    );
  }

  // Supprimer une cat√©gorie
  deleteCategory(id: string): Observable<{ message: string }> {
    const url = `${this.apiUrl}/${id}`;
    // return this.http.delete<{ message: string }>(url);
    return this.http.delete<{ message: string }>(url).pipe(
      tap(() => this.loadCategories()) // Met √† jour apr√®s suppression
    );
  }
}

export { Category };
