mat-table {
  table-layout: fixed;
  width: 100%;
  overflow-x: auto;
  min-width: 600px;
  max-width: 100vw;
}

::ng-deep .mat-mdc-header-cell {
  font-weight: bold;
  flex-wrap: nowrap;
  white-space: nowrap;
  align-items: center;
  background-color: var(--surfaceVariant) !important;
}

.actionsBtns {
  width: 500px;
  display: flex;
  height: auto;
  flex-direction: row;
  align-items: center;
  justify-content: flex-start;
}
.actionsBtns button {
  min-width: auto;
  display: flex;
  align-items: center;
}

tr:not(thead tr) {
  transition: background-color 0.3s;
}
tr:not(thead tr):hover {
  background-color: var(--surfaceBright);
}

mat-divider {
  color: var(--surfaceContainerHighest);
}

.mat-icon.success {
  color: var(--tertiaryContainer);
}
.mat-icon.error {
  color: var(--error);
}

.editing-mode input:focus {
  background-color: var(--surface);
  padding: 0 0.5rem;
  box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.08);
}

.bento-container {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 1rem;
  padding: 2rem;
  transition: all 0.3s ease-in-out;
  align-items: stretch;
}
@media (max-width: 800px) {
  .bento-container {
    grid-template-columns: 1fr;
  }
}

.bento-item {
  background-color: var(--surfaceContainer);
  border-radius: 8px;
  padding: 2rem;
  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
  text-align: center;
  transition: all 0.3s ease-in-out;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  min-height: 150px;
}
.bento-item:hover {
  box-shadow: 4px 4px 15px rgba(0, 0, 0, 0.15);
}
.bento-item.expanded {
  grid-column: 1/-1;
  min-height: 400px;
  padding: 25px;
  display: flex;
  justify-content: flex-start;
  align-items: stretch;
  position: relative;
}

.bento-container:has(.expanded) {
  grid-template-columns: repeat(4, 1fr);
}

.close-button {
  position: absolute;
  top: 10px;
  right: 15px;
  background: none;
  border: none;
  font-size: 16px;
  cursor: pointer;
  padding: 5px 10px;
  color: #555;
  transition: color 0.3s;
}
.close-button:hover {
  color: #d9534f;
}

.add {
  margin-left: 0.5rem;
  background-color: var(--primaryContainer);
  color: var(--onPrimaryContainer);
  transition: all 0.2s ease-out;
}
.add:hover {
  background-color: var(--primaryFixedDim);
  color: var(--onPrimaryFixedVariant);
  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
}

.add-button {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.animated-button {
  position: relative;
  overflow: hidden;
  width: 40px;
  /* Taille de base */
  height: 40px;
  background-color: transparent;
  cursor: pointer;
  transition: width 0.5s ease-out, background-color 0.5s ease-out, color 0.3s ease-out;
}
.animated-button .content {
  display: flex;
  align-items: center;
  justify-content: center;
}
.animated-button.edit, .animated-button.save {
  color: var(--primary);
}
.animated-button.delete, .animated-button.cancel {
  color: var(--error);
}
.animated-button:disabled {
  opacity: 0.3;
  cursor: not-allowed;
}
.animated-button .icon,
.animated-button .text {
  position: absolute;
  transition: transform 0.4s ease-out, opacity 0.3s ease-out;
  pointer-events: none;
}
.animated-button .icon {
  left: 50%;
  transform: translateX(-50%);
  font-size: 20px;
}
.animated-button .text {
  left: 20px;
  opacity: 0;
  white-space: nowrap;
}
.animated-button:hover.edit {
  background-color: var(--primaryContainer);
  color: var(--onPrimaryContainer);
  width: 90px;
}
.animated-button:hover.edit .icon {
  transform: translateX(15px);
}
.animated-button:hover.edit .text {
  opacity: 1;
  transform: translateX(-55px);
}
.animated-button:hover.delete {
  background-color: var(--error);
  color: var(--onError);
  width: 104px;
}
.animated-button:hover.delete .icon {
  transform: translateX(22px);
}
.animated-button:hover.delete .text {
  opacity: 1;
  transform: translateX(-62px);
}
.animated-button:hover.save {
  background-color: var(--primaryContainer);
  color: var(--onPrimaryContainer);
  width: 110px;
}
.animated-button:hover.save .icon {
  transform: translateX(25px);
}
.animated-button:hover.save .text {
  transform: translateX(-65px);
  opacity: 1;
}
.animated-button:hover.cancel {
  background-color: var(--error);
  color: var(--onError);
  width: 90px;
}
.animated-button:hover.cancel .icon {
  transform: translateX(15px);
}
.animated-button:hover.cancel .text {
  opacity: 1;
  transform: translateX(-55px);
}/*# sourceMappingURL=admin.component.css.map */