@use '@angular/material' as mat;

::ng-deep .mat-mdc-dialog-surface {
    background-color: var(--surfaceBright);
}

form {
    max-height: 90vh;
    overflow: hidden;
    padding: 0.5rem;

    .light {
        @include mat.divider-overrides((color: var(--surfaceDim),
            ));
    }
}

.form_content {
    max-height: 70vh;
    overflow: auto;
    position: relative;
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.08);
}

.shadow {
    position: sticky;
    height: 12px;
    width: 100%;
    pointer-events: none;
    z-index: 1;
}

.top-shadow {
    top: 0;
    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.08), transparent);
}

.bottom-shadow {
    bottom: 0;
    background: linear-gradient(to top, rgba(0, 0, 0, 0.08), transparent);
}

mat-form-field {
    border-radius: 10px;
    color: var(--onSurface);
    background-color: var(--surfaceBright);
    transition: all 0.2s ease;
    margin: 0.3rem 0;

    &:hover {
        color: var(--onSurface);
        background-color: var(--surfaceContainerLow);
    }

    &:focus-within {
        color: var(--onSurface);
        background-color: var(--surfaceContainerLow);
    }

    // &.ng-invalid.ng-untouched
    &.ng-invalid.ng-touched {
        color: var(--error);
        background-color: var(--errorContainer);
    }


}

mat-label {
    font-weight: bold;
}

mat-option {
    color: var(--onSurface) !important;
    background-color: var(--surfaceContainer) !important;

    &:hover {
        color: var(--onPrimaryFixed) !important;
        background-color: var(--primaryFixed) !important;
    }
}

mat-error, mat-hint, mat-label{
    white-space: nowrap;
    overflow: hidden;
    // text-overflow: ellipsis;
}

///////////////////////////////

.dynamic_columns {
    display: flex;
    gap: 2rem;

    // @media (min-width: 768px) {
    //     flex-direction: row;
    //     justify-content: space-between;
    // }

    .form-column {
        flex: 1;
        display: flex;
        flex-direction: column;
        min-width: 0;
    }
}

///////////////////////////////
/// colonne gauche

///////////////////////////////
// Nom - cetagorie - description
.detail {
    display: flex;
    flex-direction: column;
}

.name_category {
    display: flex;
    gap: 1rem;

    > :nth-child(1) {
        flex: 1;
    }

    > :nth-child(2) {
        flex: 1;
    }
}


///////////////////////////////
// Prix - unité
.prix_unite,
.stock_quantity {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: center;
    span{
        margin-left: 0.5rem;
    }
}



.stock {
    mat-label {
        padding: 1rem;
    }
    mat-hint{
        font-size: 0.8rem;
        color: var(--outline);
        font-style: italic;
        letter-spacing: 0.05em;
        padding: 0 0.5rem;
        transition: opacity 0.3s ease;
    }

    @include mat.slide-toggle-overrides(( // bouton
            handle-surface-color: var(--secondaryFixed),
            unselected-handle-color: var(--secondaryContainer),

            selected-handle-color: var(--tertiaryContainer),
            selected-focus-handle-color: var(--tertiaryFixedDim),
            selected-hover-handle-color: var(--tertiaryFixedDim),

            disabled-unselected-handle-color: var(--surfaceContainer),
            // icone
            unselected-icon-color: var(--onSecondaryContainer),
            selected-icon-color: var(--onTertiaryContainer),

            // bordure
            track-outline-color: var(--surfaceDim),
            selected-track-outline-color: var(--tertiaryFixedDim),

            // glissière
            // selected-focus-track-color: var(--tertiaryFixed),
            // selected-hover-track-color: var(--tertiaryFixed),
            // selected-track-color: var(--tertiaryFixed),
            disabled-unselected-track-color: var(--surfaceDim),
            // unselected-hover-handle-color: orange,

            // label-text-color: rgb(58, 192, 154)
            // unselected-hover-state-layer-opacity: 0.8,
            // unselected-hover-state-layer-color: red,
        ));
}

// animation effet "écriture"
.slow-reveal {
    opacity: 0;
        animation: fadeInText 1s ease forwards;
    }
    
@keyframes fadeInText {
    0% {
        opacity: 0;
        clip-path: inset(0 100% 0 0);
    }

    100% {
        opacity: 1;
        clip-path: inset(0 0 0 0);
    }
}


///////////////////////////////
/// colonne droite

.cooking {
    display: flex;
    flex-direction: column;
}

///////////////////////////////
/// Ingrédients
// Afficher les petites coches des ingrédients selectionnés
.composition {
    flex-direction: row-reverse;
}

.empty-message {
    color: var(--outline);
    font-style: italic;
    text-align: center;
    margin-top: 8px;
}

::ng-deep .custom-tooltip {
    white-space: pre-line;

    ::after {
        font-weight: bold;
    }

    @include mat.tooltip-overrides((container-color: var(--surfaceContainer),
            supporting-text-color: var(--onSurface)));
}

//////////////////////////////////////
//// DLC

.dlc {
    display: flex;
    gap: 16px;
    align-items: flex-start;

    mat-form-field {
        transition: width 0.5s ease;
    }

    .dlc-main {
        width: 100%;

        &.with-custom {
            width: 30%;
        }
    }

    .dlc-custom {
        width: 70%;
    }
}



//////////////////////////////////////
//// images 

.bloc_images {
    padding: 1rem;
    display: flex;
    flex-direction: column;

    // gap: 2rem;
    button {
        width: 200px;
        align-self: end;
    }
}

app-image-carousel {
    flex: 1;
    padding: 0.5rem 0;
}